#!/usr/bin/bash
# A bash script toggle between two window states:
# (1) resizing a window such that each eage's length is 80% of the screen and
# then center it. Or (2) resize a window to 50% of screen width and a bit less
# than 50% of screen height.
#
# Require program xdo, xwininfo, xdpyinfo, xprop

# Get width and height of display and window
win_id=$(xdo id)
# dpy_w=$(xdpyinfo|grep dimension|perl -pe 's/^\D+(\d+)x.+$/\1/')
# dpy_h=$(xdpyinfo|grep dimension|perl -pe 's/^\D+\d+x(\d+).+$/\1/')
dpy_w=1920
dpy_h=1080
win_w=$(xwininfo -id $win_id|grep -i '^\s*width:'|perl -pe 's/^\D+(\d+).*$/\1/')
win_h=$(xwininfo -id $win_id|grep -i '^\s*height'|perl -pe 's/^\D+(\d+).*$/\1/')

# account for display width/height occupied by fixed window panel/dock
panel_left=0
panel_right=0
panel_top=0
panel_bottom=0
panel_wid=$(( $panel_left + $panel_right ))
panel_hgt=$(( $panel_top + $panel_bottom ))

desktop_clock_hgt=0

# TODO: check border automatically
border_hgt=50 # account for extra height occupied by border of the window
border_wid=10 # account for extra height occupied by border of the window
if [[ -z $(xprop -id $win_id | grep '^_NET_FRAME_EXTENTS(CARDINAL)') \
    || -n $(xprop -id $win_id | grep '^_NET_FRAME_EXTENTS(CARDINAL) = 0, 0, 0, 0$') ]]
then
    border_hgt=0
    border_wid=0
fi

free_area_wid=$(( $dpy_w - $panel_wid ))
free_area_hgt=$(( $dpy_h - $panel_hgt - $desktop_clock_hgt ))

# L-size:
# Calculate width and height of three different sizes of windows
# Full width with reduced height to leave room for desktop clock shown at
# bottom
# wid_L=$free_area_wid # no need to minux $border_wid, for it doesn't occupy space
# hgt_L=$(($free_area_hgt - $border_hgt))
wid_L=1920
hgt_L=1080

# M-size:
# percent_M=90
# wid_M=$(( $free_area_wid * $percent_M / 100 - $border_wid ))
# hgt_M=$(( ($dpy_h-$panel_hgt-$desktop_clock_hgt) * $percent_M / 100 - $border_hgt ))
wid_M=1650
hgt_M=920

# S-size:
# 50% of window-movable area, i.e. display minus fixed panels and window border
# no need to minux $border_wid, for it doesn't occupy space
# percent_S=50
# wid_S=$(( ($dpy_w-$panel_wid) * $percent_S / 100 ))
# hgt_S=$(( ($dpy_h-$panel_hgt) * $percent_S / 100 - $border_hgt ))
wid_S=960
hgt_S=540


# If is M size to L size, if L size to S size, otherwise default to M size.
if [[ $win_w -ge $(($wid_L-$border_wid)) && $win_h -ge $((hgt_L-$border_hgt)) ]]
then
    x=0
    y=0
    xdo move -x $x -y $y
    xdo resize -w $wid_S -h $hgt_S
elif [[ $win_w -ge $(($wid_M-$border_wid)) && $win_h -ge $(($hgt_M-$border_hgt)) ]]
then
    x=0
    y=$panel_hgt
    xdo move -x $x -y $y
    xdo resize -w $wid_L -h $hgt_L
else
    x=$(( ($free_area_wid-$wid_M) / 2 + $panel_left ))
    y=$(( ($free_area_hgt-$hgt_M) / 2 + $panel_top ))
    xdo move -x $x -y $y
    xdo resize -w $wid_M -h $hgt_M
fi
